# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_ujw9DLBXknn_GhWtndx1FP4MPo0z0My
"""

#import neccesary libraries
import random

class event:
    def __init__(self, name, venue, capacity, s_distance=False):
        """Initialize event with no COVID Protocol enforced by default"""
        self.name=name.title()
        self.venue=venue
        self.capacity=int(capacity)
        self.s_distance=s_distance
        
        #by default seats occupied is zero for every event
        self.seat_taken=[]
        
        #If Social distancing is enforced every other seat is occupied. Otherwise all seats are allowed to be occupied
        if self.s_distance == True:
            self.all_seats=list(range(1,self.capacity+1,2))
        else:
            self.all_seats=list(range(1,self.capacity+1))
            
    def __str__(self):
        if self.s_distance==False:
            return "{} event at {} with {} capacity".format(self.name, self.venue, self.capacity)
        return "{} event at {} with {} capacity. All COVID protocols enforced".format(self.name, self.venue, self.capacity)

    def check_seats(self):
        """Returns a list of available seats and number of available seats for user"""
        
        if 0 in self.seat_taken:
            self.seat_taken.remove(0)
        total_left = len(self.all_seats)-len(self.seat_taken)
        self.seat_left=[]
        for seat in self.all_seats:
            if seat not in self.seat_taken:
                self.seat_left.append(seat)
        print(self.seat_left)
        print('\n')
        return "Information: Only {} seats left".format(total_left)
    
    def book_seat(self):
        """Book a seat for the event"""
        print('For a single ticket, type "S"','\n','For a couple ticket, type "C"')
        print('\n')
        
        tic_type = input('Choose ticket type? S or C : ')
        # 0 is appended to the seat taken list as a workaround
        self.seat_taken.append(0)
        seat_given = 0
        
        
        while seat_given in self.seat_taken and tic_type == 'S':
            seat_given = random.choice(self.all_seats)
            if seat_given not in self.seat_taken:
                self.seat_taken.append(seat_given)
                print('seat',seat_given , 'has been assigned to you')
                if 0 in self.seat_taken:
                    self.seat_taken.remove(0)
                break
        while seat_given in self.seat_taken and tic_type=='C':
            seat_given = random.choice(self.all_seats)
            #Every other for social distancing and every  seat for no social distancing
            if self.s_distance==False:
                seat_given_2=seat_given+1
            else:
                seat_given_2=seat_given+2
            print(seat_given)
            if (seat_given not in self.seat_taken) and (seat_given_2 not in self.seat_taken):
                self.seat_taken.append(seat_given)
                self.seat_taken.append(seat_given_2)
                print('seat {} & {} have been assigned to you two!'.format(seat_given,seat_given_2))
                if 0 in self.seat_taken:
                    self.seat_taken.remove(0)
                break

#Initialize event without Covid restrictions
EPL_01=event('Super Sunday','Old Trafford', 50 )

#Initailize event with COVID restrictions
La_Liga_01 = event('El Classico', 'Santiago Bernabeu', 50, True)

#Get details of First Event
print(EPL_01)

#Get details of Second Event
print(La_Liga_01)

# test methods
# A typical user first tests ticket (seats) slots available
EPL_01.check_seats()

#Displays all available seats and the total number remaining

# Run the same check for the event with COVID protocols enforced
La_Liga_01.check_seats()

# Notice that with COVID protocols enforced there are only 25 seats left. Can you guess why?

# So How do I book when I am available? Also I want to sit with next to my partner. (Why do you think I bought a Couples' ticket ! lol)

La_Liga_01.book_seat()

La_Liga_01.book_seat()

La_Liga_01.check_seats()

EPL_01.book_seat()

